<svg width="640" height="640" viewBox="0 0 640 640" xmlns="http://www.w3.org/2000/svg">
  <rect width="100%" height="100%" fill="white" />
  <g>
    <circle data-type="point" data-label="schematic_port_0" data-x="3.4487093" data-y="0.0002732499999993365" cx="477.0882015729961" cy="319.97086049721077" r="3" fill="normal" />
  </g>
  <g>
    <circle data-type="point" data-label="schematic_port_1" data-x="4.5512907" data-y="-0.0002732499999993365" cx="594.6679775316952" cy="320.02913950278923" r="3" fill="normal" />
  </g>
  <g>
    <circle data-type="point" data-label="schematic_port_2" data-x="-0.6000000000000001" data-y="0.30000000000000004" cx="45.332022468304814" cy="288.00786519017123" r="3" fill="normal" />
  </g>
  <g>
    <circle data-type="point" data-label="schematic_port_3" data-x="-0.6000000000000001" data-y="0.10000000000000003" cx="45.332022468304814" cy="309.33595506339043" r="3" fill="not_connected" />
  </g>
  <g>
    <circle data-type="point" data-label="schematic_port_4" data-x="-0.6000000000000001" data-y="-0.09999999999999998" cx="45.332022468304814" cy="330.66404493660957" r="3" fill="not_connected" />
  </g>
  <g>
    <circle data-type="point" data-label="schematic_port_5" data-x="-0.6000000000000001" data-y="-0.30000000000000004" cx="45.332022468304814" cy="351.99213480982877" r="3" fill="not_connected" />
  </g>
  <g>
    <circle data-type="point" data-label="schematic_port_6" data-x="0.6000000000000001" data-y="-0.30000000000000004" cx="173.30056170761983" cy="351.99213480982877" r="3" fill="not_connected" />
  </g>
  <g>
    <circle data-type="point" data-label="schematic_port_7" data-x="0.6000000000000001" data-y="-0.10000000000000003" cx="173.30056170761983" cy="330.66404493660957" r="3" fill="normal" />
  </g>
  <g>
    <circle data-type="point" data-label="schematic_port_8" data-x="0.6000000000000001" data-y="0.09999999999999998" cx="173.30056170761983" cy="309.33595506339043" r="3" fill="not_connected" />
  </g>
  <g>
    <circle data-type="point" data-label="schematic_port_9" data-x="0.6000000000000001" data-y="0.30000000000000004" cx="173.30056170761983" cy="288.00786519017123" r="3" fill="not_connected" />
  </g>
  <g>
    <polyline data-points="3.4487093,0.0002732499999993365 -0.6000000000000001,0.30000000000000004" data-type="line" data-label="" points="477.0882015729961,319.97086049721077 45.332022468304814,288.00786519017123" fill="none" stroke="hsl(0, 100%, 50%, 0.2)" stroke-width="1" />
  </g>
  <g>
    <polyline data-points="4.5512907,-0.0002732499999993365 0.6000000000000001,-0.10000000000000003" data-type="line" data-label="" points="594.6679775316952,320.02913950278923 173.30056170761983,330.66404493660957" fill="none" stroke="hsl(45, 100%, 50%, 0.2)" stroke-width="1" />
  </g>
  <g>
    <rect data-type="rect" data-label="schematic_component_0" data-x="4" data-y="0" x="471.75617910469134" y="314.638838028906" width="128.24382089530866" height="10.72232394218804" fill="rgba(0, 0, 0, 0.2)" stroke="black" stroke-width="0.009377304821428572" />
  </g>
  <g>
    <rect data-type="rect" data-label="schematic_component_1" data-x="0" data-y="0" x="40.000000000000014" y="282.67584272186645" width="138.63258417592465" height="74.64831455626711" fill="rgba(0, 0, 0, 0.2)" stroke="black" stroke-width="0.009377304821428572" />
  </g>
  <g id="crosshair" style="display: none">
    <line id="crosshair-h" y1="0" y2="640" stroke="#666" stroke-width="0.5" />
    <line id="crosshair-v" x1="0" x2="640" stroke="#666" stroke-width="0.5" /><text id="coordinates" font-family="monospace" font-size="12" fill="#666"></text>
  </g>
  <script>
    <![CDATA[
    document.currentScript.parentElement.addEventListener('mousemove', (e) => {
      const svg = e.currentTarget;
      const rect = svg.getBoundingClientRect();
      const x = e.clientX - rect.left;
      const y = e.clientY - rect.top;
      const crosshair = svg.getElementById('crosshair');
      const h = svg.getElementById('crosshair-h');
      const v = svg.getElementById('crosshair-v');
      const coords = svg.getElementById('coordinates');

      crosshair.style.display = 'block';
      h.setAttribute('x1', '0');
      h.setAttribute('x2', '640');
      h.setAttribute('y1', y);
      h.setAttribute('y2', y);
      v.setAttribute('x1', x);
      v.setAttribute('x2', x);
      v.setAttribute('y1', '0');
      v.setAttribute('y2', '640');

      // Calculate real coordinates using inverse transformation
      const matrix = {
        "a": 106.64044936609584,
        "c": 0,
        "e": 109.31629208796232,
        "b": 0,
        "d": -106.64044936609584,
        "f": 320
      };
      // Manually invert and apply the affine transform
      // Since we only use translate and scale, we can directly compute:
      // x' = (x - tx) / sx
      // y' = (y - ty) / sy
      const sx = matrix.a;
      const sy = matrix.d;
      const tx = matrix.e;
      const ty = matrix.f;
      const realPoint = {
        x: (x - tx) / sx,
        y: (y - ty) / sy // Flip y back since we used negative scale
      }

      coords.textContent = `(${realPoint.x.toFixed(2)}, ${realPoint.y.toFixed(2)})`;
      coords.setAttribute('x', (x + 5).toString());
      coords.setAttribute('y', (y - 5).toString());
    });
    document.currentScript.parentElement.addEventListener('mouseleave', () => {
      document.currentScript.parentElement.getElementById('crosshair').style.display = 'none';
    });
    ]]>
  </script>
</svg>